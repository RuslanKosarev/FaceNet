# coding:utf-8

# Directory where to write trained models and checkpoints
model_dir: ~/models/facenet

# Directory where to write event logs
log_dir: None

# Model definition. Points to a module containing the definition of the inference graph.',
model_def: facenet.models.inception_resnet_v1

# Model config definition
model_config: None

# Random seed
seed: 0

# Directory with aligned face patches.
data_dir: ~/datasets/vggface2/test_frcnnv3extracted_160

# Path to h5 file with information about valid images.
h5file: None

# The ratio of the total dataset to use for validation
validation_set_split_ratio: 0

# Classes with fewer images will be removed from the validation set', default=0)
min_nrof_val_images_per_class: 0

# Load a pretrained checkpoint before training starts.
pretrained_checkpoint: None

# Path to the data directory containing aligned face patches.
lfw_dir: None

# Number of images to process in a batch.
batch_size: 100

# Number of batches per epoch.
epoch_size: 1000

# Image size (height, width) in pixels.
image_size: 160

# Keep probability of dropout for the fully connected layer(s).
keep_probability: 1.0

# L2 weight regularization.
weight_decay: 0.0

# Norm to use for prelogits norm loss.
prelogits_norm_p: 1.0

prelogits_norm_loss_factor: 0.0 # Loss based on the norm of the activations in the prelogits layer
center_loss_alfa: 0.95          # Center update rate for center loss
center_loss_factor: 0.0         # Center loss factor

learning_rate_decay_epochs: 100 # Number of epochs between learning rate decay
learning_rate_decay_factor: 1.0 # Learning rate decay factor
optimizer: ADAGRAD              # The optimization algorithm to use

# learning rate value or schedule file
learning_rate:
  # Initial learning rate. If set to a negative value a learning rate schedule can be specified in the file learning_rate_schedule.txt
  value: -1
  # File containing the learning rate schedule that is used when learning_rate is set to to -1
  schedule_file: data/learning_rate_schedule.txt

moving_average_decay: 0.9999    # Exponential decay for tracking of training parameters
log_histograms: False           # Enables logging of weight/bias histograms in tensorboard


gpu_memory_fraction: 1.0        # Upper bound on the amount of GPU memory that will be used by the process

max_nrof_epochs: 500            # Number of epochs to run
validate_every_n_epochs: 10     # Number of epoch between validation


image:
  standardization: true # Performs fixed standardization of images
  random_crop: false    # Performs random cropping of training images. If false, the center image_size pixels from
                        # the training images are used. If the size of the images in the data directory is equal to image_size no cropping is performed.
  random_flip: false    # Performs random horizontal flipping of training images
  random_rotate: false  # Performs random rotations of training images

prelogits_hist_max: 10.0 # The max value for the prelogits histogram

#    parser.add_argument('--seed', type=int,
#        help='Random seed.', default=666)
#    parser.add_argument('--nrof_preprocess_threads', type=int,
#        help='Number of preprocessing (data loading and augmentation) threads.', default=4)
#    parser.add_argument('--filter_filename', type=str,
#        help='File containing image data used for dataset filtering', default='')
#    parser.add_argument('--filter_percentile', type=float,
#        help='Keep only the percentile images closed to its class center', default=100.0)
#    parser.add_argument('--filter_min_nrof_images_per_class', type=int,
#        help='Keep only the classes with this number of examples or more', default=0)
#
#    # Parameters for validation on LFW
#    parser.add_argument('--lfw_pairs', type=str,
#        help='The file containing the pairs to use for validation.', default='data/pairs.txt')
#    parser.add_argument('--lfw_batch_size', type=int,
#        help='Number of images to process in a batch in the LFW test set.', default=100)
#    parser.add_argument('--lfw_nrof_folds', type=int,
#        help='Number of folds to use for cross validation. Mainly used for testing.', default=10)
#    parser.add_argument('--lfw_distance_metric', type=int,
#        help='Type of distance metric to use. 0: Euclidian, 1:Cosine similarity distance.',
#        default=config.distance_metric)
#    parser.add_argument('--lfw_use_flipped_images',
#        help='Concatenates embeddings for the image and its horizontally flipped counterpart.', action='store_true')
#    parser.add_argument('--lfw_subtract_mean',
#        help='Subtract feature mean before calculating distance.', action='store_true')
#
#    return parser.parse_args(argv[1:])
